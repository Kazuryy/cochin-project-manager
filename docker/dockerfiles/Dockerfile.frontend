# Multi-stage build pour réduire la surface d'attaque
FROM node:22-alpine3.21 AS builder

# Installer dumb-init pour la gestion des signaux et mettre à jour les packages
RUN apk update && \
    apk upgrade && \
    apk add --no-cache dumb-init

WORKDIR /app

# Copier les fichiers de dépendances (lock inclus pour stabilité)
COPY frontend/package.json frontend/package-lock.json ./

# Configuration npm pour ARM64 et cache optimisé
RUN npm config set fetch-retry-mintimeout 20000 && \
    npm config set fetch-retry-maxtimeout 120000 && \
    npm config set fetch-timeout 300000 && \
    npm config set maxsockets 3 && \
    npm ci --only=production=false --no-audit --prefer-offline && \
    npm cache clean --force

# Copier le code source
COPY frontend/ .

# Build de production avec Vite
RUN npm run build

# Stage de production avec serveur statique
FROM nginx:alpine AS runner

# Installer dumb-init et faire une mise à jour des packages
RUN apk update && \
    apk upgrade && \
    apk add --no-cache dumb-init curl wget

# Copier les fichiers buildés vers nginx
COPY --from=builder /app/dist /usr/share/nginx/html

# Arguments pour différencier les environnements
ARG BUILD_ENV=production

# Utiliser la configuration nginx
COPY docker/config/nginx.conf /etc/nginx/nginx.conf

# Modifications conditionnelles selon l'environnement
RUN if [ "$BUILD_ENV" = "development" ]; then \
        echo "🔧 Configuration pour développement local" && \
        sed -i 's/listen 5050;/listen 1337;/' /etc/nginx/nginx.conf && \
        sed -i 's/server backend:8000;/server host.docker.internal:8000;/' /etc/nginx/nginx.conf && \
        echo "expose 1337" > /tmp/expose_port; \
    else \
        echo "🚀 Configuration pour production" && \
        echo "expose 5050" > /tmp/expose_port; \
    fi

# Port exposé selon l'environnement  
EXPOSE 5050
EXPOSE 1337

ENTRYPOINT ["dumb-init", "--"]
CMD ["sh", "-c", "echo '🚀 Starting nginx debug...' && echo '📁 Files:' && ls -la /usr/share/nginx/html/ && echo '⚙️ Config test:' && nginx -t && echo '🚀 Starting nginx...' && nginx -g 'daemon off; error_log /dev/stderr info;'"]
