services:
  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    environment:
      - DJANGO_ENV=production
      - SECRET_KEY=${SECRET_KEY:-django-dev-secret-key-change-in-production}
      - ALLOWED_HOSTS=project-manager.local,localhost,127.0.0.1
      - CORS_ALLOWED_ORIGINS=http://project-manager.local,https://project-manager.local
      - CSRF_TRUSTED_ORIGINS=http://project-manager.local,https://project-manager.local
      - BACKUP_ENCRYPTION_KEY=${BACKUP_ENCRYPTION_KEY:-dev-backup-encryption-key}
      - DISCORD_WEBHOOK_URL=${DISCORD_WEBHOOK_URL:-}
      - DATABASE_PATH=/app/db/db.sqlite3
    volumes:
      - ./data/db:/app/db              # Base SQLite persistante
      - ./data/media:/app/media        # Fichiers m√©dia
      - ./data/backups:/app/backups    # Sauvegardes
      - ./data/logs:/app/logs          # Logs
      - ./data/staticfiles:/app/staticfiles  # Fichiers statiques
    networks:
      - app-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "manage.py", "check", "--database", "default"]
      interval: 30s
      timeout: 10s
      retries: 3

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    ports:
      - "80:80"
    depends_on:
      backend:
        condition: service_healthy
    networks:
      - app-network
    restart: unless-stopped

networks:
  app-network:
    driver: bridge 