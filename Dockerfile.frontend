# Multi-stage build pour réduire la surface d'attaque
FROM node:20-alpine AS builder

# Installer dumb-init pour la gestion des signaux
RUN apk add --no-cache dumb-init

# Créer utilisateur non-root
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

WORKDIR /app

# Copier les fichiers de dépendances
COPY frontend/package*.json ./
RUN npm ci --only=production && npm cache clean --force

# Copier le code source
COPY frontend/ .

# Build de production
RUN npm run build

# Stage de production minimal
FROM node:20-alpine AS runner

RUN apk add --no-cache dumb-init && \
    addgroup -g 1001 -S nodejs && \
    adduser -S nextjs -u 1001

WORKDIR /app

# Copier seulement les fichiers nécessaires
COPY --from=builder --chown=nextjs:nodejs /app/dist ./dist
COPY --from=builder --chown=nextjs:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=nextjs:nodejs /app/package.json ./package.json

USER nextjs

EXPOSE 3000

ENTRYPOINT ["dumb-init", "--"]
CMD ["npm", "start"]
